{
  "name": "opencollective-api",
  "version": "2.0.490",
  "description": "Open Collective API",
  "author": "@philmod @arnaudbenard @xdamman @asood123",
  "main": "server/index.js",
  "engines": {
    "node": "12.13.0",
    "npm": "6.12.0"
  },
  "dependencies": {
    "@babel/core": "7.6.4",
    "@babel/node": "7.6.3",
    "@babel/plugin-proposal-class-properties": "7.5.5",
    "@babel/plugin-transform-async-to-generator": "7.5.0",
    "@babel/preset-env": "7.6.3",
    "@babel/preset-typescript": "^7.6.0",
    "@octokit/rest": "16.34.1",
    "@opencollective/taxes": "2.3.0",
    "algoliasearch": "3.35.1",
    "apollo-errors": "1.9.0",
    "apollo-server-express": "2.9.7",
    "argparse": "1.0.10",
    "async": "3.1.0",
    "aws-sdk": "2.563.0",
    "axios": "0.19.0",
    "babel-plugin-add-module-exports": "1.0.2",
    "babel-plugin-lodash": "3.3.4",
    "bcrypt": "3.0.6",
    "bluebird": "3.7.1",
    "body-parser": "1.19.0",
    "child-process-promise": "2.2.1",
    "clearbit": "1.3.4",
    "cloudflare": "2.7.0",
    "cloudflare-ip": "0.0.7",
    "config": "3.2.4",
    "connect-redis": "4.0.3",
    "cookie-parser": "1.4.4",
    "cors": "2.8.5",
    "dataloader": "1.4.0",
    "dataloader-sequelize": "1.7.10",
    "debug": "4.1.1",
    "deepmerge": "4.2.2",
    "dotenv": "8.2.0",
    "errorhandler": "1.5.1",
    "express": "4.17.1",
    "express-graphql": "0.9.0",
    "express-limiter": "1.6.1",
    "express-server-status": "1.0.3",
    "express-session": "1.17.0",
    "flat": "5.0.0",
    "forest-express-sequelize": "5.0.0",
    "fs-extra": "8.1.0",
    "graphql": "14.5.8",
    "graphql-iso-date": "3.6.1",
    "graphql-type-json": "0.3.0",
    "handlebars": "4.5.1",
    "hashids": "2.0.1",
    "he": "1.2.0",
    "helloworks-sdk": "pietgeursen/helloworks-nodejs-sdk",
    "helmet": "3.21.2",
    "html-pdf": "2.2.0",
    "ics": "2.18.0",
    "intl-messageformat": "7.5.0",
    "isomorphic-fetch": "2.2.1",
    "json2csv": "4.5.4",
    "jsonwebtoken": "8.5.1",
    "juice": "5.2.0",
    "limax": "2.0.0",
    "lodash": "4.17.15",
    "lru-cache": "5.1.1",
    "memjs": "1.2.2",
    "merge-options": "2.0.0",
    "moment": "2.24.0",
    "moment-timezone": "0.5.27",
    "morgan": "1.9.1",
    "multer": "1.4.2",
    "node-fetch": "2.6.0",
    "node-slack": "0.0.7",
    "nodemailer": "6.3.1",
    "p-queue": "6.2.0",
    "p-throttle": "3.1.0",
    "passport": "0.4.0",
    "passport-github": "1.1.0",
    "passport-meetup-oauth2": "0.0.2",
    "passport-twitter": "1.0.4",
    "paypal-adaptive": "0.4.2",
    "pg": "7.12.1",
    "pg-connection-string": "2.1.0",
    "pg-format": "1.0.4",
    "prepend-http": "3.0.1",
    "redis": "2.8.0",
    "request-as-curl": "0.1.0",
    "request-promise": "4.2.5",
    "sanitize-html": "1.20.1",
    "sequelize": "5.21.2",
    "sequelize-cli": "5.5.1",
    "sequelize-temporal": "1.0.8",
    "showdown": "1.9.1",
    "stripe": "7.11.0",
    "tweetnacl": "1.0.1",
    "tweetnacl-util": "0.15.0",
    "twitter": "1.7.1",
    "uuid": "3.3.3",
    "validator": "12.0.0",
    "winston": "3.2.1"
  },
  "devDependencies": {
    "@babel/cli": "7.6.4",
    "@babel/polyfill": "7.6.0",
    "@babel/register": "7.6.2",
    "@typescript-eslint/eslint-plugin": "^2.6.1",
    "@typescript-eslint/parser": "^2.6.1",
    "babel-eslint": "^10.0.3",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-jest-snapshot": "^2.0.0",
    "commitizen": "^4.0.3",
    "cz-conventional-changelog": "^3.0.2",
    "eslint": "^6.6.0",
    "eslint-config-opencollective": "^2.0.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-mocha": "6.2.1",
    "eslint-plugin-node": "^10.0.0",
    "eslint-plugin-react": "^7.16.0",
    "husky": "^3.0.9",
    "lint-staged": "^9.4.2",
    "maildev": "^1.1.0",
    "mocha": "^6.2.2",
    "mocha-circleci-reporter": "^0.0.3",
    "nock": "^11.7.0",
    "nodemon": "^1.19.4",
    "nyc": "^14.1.1",
    "prettier": "1.18.2",
    "sinon": "^7.5.0",
    "supertest": "^4.0.2",
    "supertest-as-promised": "^4.0.2",
    "typescript": "^3.6.4"
  },
  "scripts": {
    "build": "npm run build:clean && npm run build:updates && npm run build:server",
    "build:clean": "rm -rf dist && mkdir dist",
    "build:server": "babel server --extensions .js,.ts -d ./dist",
    "build:updates": "npm --prefix node_modules/cloudflare-ip run update-list",
    "clean": "npm run build:clean && npm run test:clean",
    "commit": "git-cz",
    "compile:email": "babel-node --extensions .js,.ts scripts/compile-email.js",
    "compile:email:watch": "./scripts/watch_email_template.sh",
    "cron:10mn": "./scripts/cron.sh 10mn",
    "cron:daily": "./scripts/cron.sh daily",
    "cron:hourly": "./scripts/cron.sh hourly",
    "cron:monthly": "./scripts/cron.sh monthly",
    "cron:weekly": "./scripts/cron.sh weekly",
    "cron:yearly": "./scripts/cron.sh yearly",
    "db:clean": "babel-node --extensions .js,.ts ./scripts/sanitize-db.js",
    "db:copy:prod": "./scripts/db_copy_to_localhost.sh prod && PG_DATABASE=opencollective_prod_snapshot npm run db:sanitize",
    "db:copy:prod:staging": "./scripts/db_copy_prod_to_staging.sh opencollective-staging-api && heroku run npm run db:sanitize --app opencollective-staging-api",
    "db:copy:prod:staging-dev": "./scripts/db_copy_prod_to_staging.sh $DEV && heroku run npm run db:sanitize --app $DEV",
    "db:copy:staging": "./scripts/db_copy_to_localhost.sh staging",
    "db:migrate": "./scripts/sequelize.sh db:migrate",
    "db:migrate:undo": "./scripts/sequelize.sh db:migrate:undo",
    "db:migration:create": "./scripts/sequelize.sh migration:create",
    "db:reset": "babel-node --extensions .js,.ts scripts/reset",
    "db:restore": "./scripts/db_restore.sh",
    "db:sanitize": "babel-node --extensions .js,.ts scripts/sanitize-db",
    "db:seed": "./scripts/sequelize.sh db:seed",
    "db:setup": "babel-node --extensions .js,.ts ./scripts/db_setup.js",
    "deploy:production": "./scripts/pre-deploy.sh production && bash -x scripts/deploy.sh production",
    "deploy:staging": "./scripts/pre-deploy.sh staging && bash -x scripts/deploy.sh staging",
    "dev": "nodemon server/index.js -x \"babel-node --extensions .js,.ts\" . -e js,hbs,ts",
    "export:csv": "babel-node --extensions .js,.ts scripts/monthly_data_exports.js",
    "forestadmin-schema:update": "npm run script scripts/forestadmin-schema-update && prettier .forestadmin-schema.json --write",
    "git:clean": "./scripts/git_clean.sh",
    "hint": "npm run lint:quiet",
    "lint": "eslint .",
    "lint:fix": "npm run lint -- --fix",
    "lint:quiet": "npm run lint -- --quiet",
    "maildev": "maildev",
    "postdb:migrate:dev": "npm run db:clean",
    "postinstall": "./scripts/postinstall.sh",
    "prettier": "prettier \"**/*.@(js|json|md)\" --ignore-path .eslintignore",
    "prettier:check": "npm run prettier -- --list-different",
    "prettier:write": "npm run prettier -- --write",
    "refund-transactions": "babel-node --extensions .js,.ts ./scripts/add_refund_transactions_from_collective.js",
    "report": "node scripts/send_email_report_cli.js",
    "script": "babel-node --extensions .js,.ts $1",
    "start": "node ./dist/index.js",
    "test": "TZ=UTC nyc mocha --reporter-options mochaFile=$(bash scripts/test_output_dir.sh junit)/junit.xml",
    "test:clean": "rm -rf .nyc_output coverage test/output",
    "test:watch": "TZ=UTC nyc mocha --watch",
    "type:check": "tsc"
  },
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ],
    "cache": true
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,json,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/opencollective/opencollective-api.git"
  },
  "heroku-run-build-script": true
}
