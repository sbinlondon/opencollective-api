version: 2

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - npm-cache-{{ checksum "package-lock.json" }}
        - npm-cache-

  persist_cache: &persist_cache
    save_cache:
      name: Save node modules cache
      key: npm-cache-{{ checksum "package-lock.json" }}
      paths:
        - ~/.npm

  test_env: &test_env
    TZ: 'UTC'
    NODE_ENV: 'circleci'
    POSTGRES_USER: 'postgres'
    POSTGRES_PASSWORD: ''
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results

  test_filters: &test_filters
    filters:
      branches:
        ignore:
          - test-server
          - staging
          - production

jobs:
  lint:
    docker:
      - image: circleci/node:12.13.0
    environment:
      NODE_ENV: circleci
    steps:
      - checkout
      - <<: *restore_cache
      - run: npm ci --ignore-scripts
      - <<: *persist_cache
      - run: npm run lint
      - run: npm run prettier:check

  typescript:
    docker:
      - image: circleci/node:12.13.0
    environment:
      NODE_ENV: circleci
    steps:
      - checkout
      - <<: *restore_cache
      - run: npm ci --ignore-scripts
      - <<: *persist_cache
      - run: npm run type:check

  test:
    docker:
      - image: circleci/node:12.13.0
      - image: circleci/postgres:9.6.8-alpine-postgis-ram
      - image: circleci/redis
      - image: memcached
    environment:
      - <<: *test_env
    steps:
      - checkout
      - <<: *restore_cache
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run: npm ci
      - run: npm run db:setup
      - <<: *persist_cache
      - run: npm run test
      - store_test_results:
          path: /tmp/circleci-test-results

workflows:
  version: 2
  main:
    jobs:
      - lint:
          <<: *test_filters
      - typescript:
          <<: *test_filters
      - test:
          <<: *test_filters
